                            Mediator (Посередник)

Purpose: Reduces dependencies between objects by centralizing their communication through an intermediary.

Мета: Зменшує залежності між об'єктами, централізуючи їхню комунікацію через посередника.




// Посередник
interface Mediator {
    void sendMessage(String message, Colleague colleague);
}

// Конкретний Посередник
class ChatMediator implements Mediator {
    private List<Colleague> colleagues = new ArrayList<>();

    public void addColleague(Colleague colleague) {
        colleagues.add(colleague);
    }

    public void sendMessage(String message, Colleague sender) {
        for (Colleague colleague : colleagues) {
            if (colleague != sender) {
                colleague.receive(message);
            }
        }
    }
}

// Базовий клас учасників
abstract class Colleague {
    protected Mediator mediator;

    public Colleague(Mediator mediator) {
        this.mediator = mediator;
    }

    public abstract void send(String message);
    public abstract void receive(String message);
}

class User extends Colleague {
    public User(Mediator mediator) {
        super(mediator);
    }

    public void send(String message) {
        System.out.println("Користувач відправляє: " + message);
        mediator.sendMessage(message, this);
    }

    public void receive(String message) {
        System.out.println("Користувач отримав: " + message);
    }
}

// Використання
public class Main {
    public static void main(String[] args) {
        ChatMediator mediator = new ChatMediator();

        Colleague user1 = new User(mediator);
        Colleague user2 = new User(mediator);

        mediator.addColleague(user1);
        mediator.addColleague(user2);

        user1.send("Привіт!");
        user2.send("Привіт, як справи?");
    }
}
